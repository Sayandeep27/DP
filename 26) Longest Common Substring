 
    int longestCommonSubstr (string s1, string s2, int n, int m)
    {
        // your code here
        
        vector<vector<int>>dp(n+1,vector<int>(m+1,0));
        
        int ans=0;
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s1[i-1]==s2[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                    ans=max(ans,dp[i][j]);
                }
                else
                {
                    dp[i][j]=0;
                }
            }
        }
        
        return ans;
        
    }



---------------------------------Memorizarion-------------------------------------------------------

int f(int i,int j,int cnt,string &s1,string &s2,vector<vector<int>>&dp)
{
    
    
    // base case
   if(i<0 or j<0) return cnt;
    
   if(dp[i][j]!=-1) return dp[i][j];
    
    int same=cnt;
    
    if(s1[i]==s2[j])
    {
        same=f(i-1,j-1,cnt+1,s1,s2,dp);
    }
    
   
    
    int diff1=f(i,j-1,0,s1,s2,dp);
    int diff2=f(i-1,j,0,s1,s2,dp);
    
    
    return  dp[i][j]=max(same,max(diff1,diff2));
    
}



int lcs(string &s1, string &s2){
  
    int n=s1.size();
    int m=s2.size();
    
   vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
    
    
    int ans=f(n-1,m-1,0,s1,s2,dp);
    
    return ans;
    
}
