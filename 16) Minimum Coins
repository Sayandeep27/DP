#include <bits/stdc++.h> 

int f(int i,int target,vector<int>&num,vector<vector<int>>&dp)
{
    // base case
   
    if(i==0)
    {
        if(target%num[0]==0)
        {
            return target/num[0];
        }
        
        return 1e9;
    }
   
    
      if(dp[i][target]!=-1) return dp[i][target];
    
    // not take
    int not_take=0+f(i-1,target,num,dp);
    
    // take
    int take=1e9;
    
    if(num[i]<=target)
    {
        take=1+f(i,target-num[i],num,dp);
    }
    
    return dp[i][target]=min(take,not_take);
    
    
}

int minimumElements(vector<int> &num, int x)
{
    // Write your code here.
    int n=num.size();
    
    vector<vector<int>>dp(n+1,vector<int>(x+1,-1));
    
    int ans=f(n-1,x,num,dp);
    
    if(ans==1e9) return -1;
    
    return ans;
}
