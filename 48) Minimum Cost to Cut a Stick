class Solution {
public:

    int solve(int i,int j,vector<int>&cuts,vector<vector<int>>&dp)
    {
         // base cases

         if(i>j) return 0;

         if(dp[i][j]!=-1) return dp[i][j];


         int mini=INT_MAX;

         for(int index=i;index<=j;index++)
         {
             int ans=(cuts[j+1]-cuts[i-1])+solve(i,index-1,cuts,dp)+solve(index+1,j,cuts,dp);
             mini=min(mini,ans);
         } 

         return dp[i][j]=mini;

        
    }

    int minCost(int n, vector<int>& cuts) {
        
            int m=cuts.size();

            cuts.insert(cuts.begin(),0);
            cuts.push_back(n);

            sort(cuts.begin(),cuts.end());

            int i=1;
            int j=m;

            vector<vector<int>>dp(m+1,vector<int>(m+1,-1));

            return solve(i,j,cuts,dp);


    }
};
