class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        
        int n=prices.size();

        vector<vector<vector<int>>>dp(n+1,vector<vector<int>>(2,vector<int>(k+1,0)));

        for(int i=n-1;i>=0;i--)
        {
            for(int buy=0;buy<=1;buy++)
            {
                for(int cap=1;cap<=k;cap++)
                {
                    if(buy==0) // we can buy the stock
                    {
                        // take
                        int take=-prices[i]+dp[i+1][1][cap];

                        // not_take
                        int not_take=dp[i+1][0][cap];

                        dp[i][buy][cap]=max(take,not_take);


                    }
                    else  // we can sell the stock
                    {
                        // take
                        int take=prices[i]+dp[i+1][0][cap-1];

                        // not take
                        int not_take=dp[i+1][1][cap];

                         dp[i][buy][cap]=max(take,not_take);


                    }
                }
            }
        }


        return dp[0][0][k];
        
    }
};
