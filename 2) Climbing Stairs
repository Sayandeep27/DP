
int f(int i,vector<int>&dp)
{
    // base cases
    if(i==0) return 1;
    if(i==1) return 1;
 
    if(dp[i]!=-1) return dp[i];
    
    // one step
    int onestep=f(i-1,dp);
    
    // two steps
    int twostep=f(i-2,dp);
    
    
    return dp[i]= (onestep+twostep)%1000000007;
    
}

int countDistinctWays(int n) {
    
    vector<int>dp(n+1,-1);
    
    int ans=f(n,dp);
    
    return ans;
    
    
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------


Time Complexity: O(N)

Reason: We are running a simple iterative loop

Space Complexity: O(N)

Reason: We are using an external array of size ‘n+1’.
