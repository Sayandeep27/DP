

  int n=word1.size();
         int m=word2.size();

         vector<vector<int>>dp(n+1,vector<int>(m+1,0));

         for(int i=0;i<=n;i++)
         {
             for(int j=0;j<=m;j++)
             {
                 if(i==0 or j==0) dp[i][j]=0;
             }
         }

         
         for(int i=1;i<=n;i++)
         {
             for(int j=1;j<=m;j++)
             {
                 if(word1[i-1]==word2[j-1])
                 {
                     dp[i][j]=1+dp[i-1][j-1];
                 }
                 else
                 {
                     dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                 }
             }
         }

         int lol=dp[n][m];



---------------------------------Memorization------------------------------------------------------

#include <bits/stdc++.h>

using namespace std;


int f(int i,int j,string &s,string &t,vector<vector<int>>&dp)
{
    // base case
    
    if(i<0 or j<0) return 0;
    
    
    if(dp[i][j]!=-1) return dp[i][j];
    
    
    if(s[i]==t[j])
    {
        return  dp[i][j]= 1+f(i-1,j-1,s,t,dp);
    }
    
    return dp[i][j]= 0+max(f(i-1,j,s,t,dp),f(i,j-1,s,t,dp));
    
}

int lcs(string s, string t)
{
      //Write your code here
       
      int n=s.size();
      int m=t.size();
    
    vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
      
    int ans=f(n-1,m-1,s,t,dp);
    
    return ans;
    
    
}

