class Solution {
public:
    bool is_palindrome(string s)
    {
        int i=0;int j=s.size()-1;

        while(i<j)
        {
            if(s[i]!=s[j]) return false;

            i++;
            j--;
        }

        return true;
    }

    string longestPalindrome(string s) {
           
         int n=s.size();

         string t=s;
         reverse(t.begin(),t.end());

         vector<vector<int>>dp(n+1,vector<int>(n+1,0));

         string ans="";

         int len=0;


         for(int i=1;i<=n;i++)
         {
             for(int j=1;j<=n;j++)
             {
                 if(s[i-1]==t[j-1])
                 {
                     dp[i][j]=1+dp[i-1][j-1];

                     if(dp[i][j]>len)
                     {
                          string x=s.substr(i-dp[i][j],dp[i][j]);

                          if(is_palindrome(x))
                          {
                              ans=x;
                              len=x.size();
                          }
                     }
                 }
             }
         }  
         
         return ans;
 
    }
};
